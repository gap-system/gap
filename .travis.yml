# We want Ubuntu 14.04 "Trust" instead of 12.04 "Precise" to get newer
# and less buggy gcov
dist: trusty
language: c

env:
  global:
    - CFLAGS="-fprofile-arcs -ftest-coverage -O2"
    - LDFLAGS="-fprofile-arcs"

# TODO: boehm GC, HPC-GAP compatibility mode

addons:
  apt_packages:
    - libgmp-dev
    - libreadline-dev
    - gcc-multilib
    - g++-multilib
    - texinfo

matrix:
  include:
    # general test suite (subsumes testinstall tests, too)
    - env: TEST_SUITE=testtravis CONFIGFLAGS="--enable-debug"
    - env: TEST_SUITE=testtravis ABI=32 CONFIGFLAGS="--enable-debug"
      sudo: required    # trusty containers are missing libgmp:i386, use sudo-enabled infrastructure instead
      before_install:
        - sudo apt-get -qq update
        - sudo apt-get install libgmp-dev:i386 gcc-multilib g++-multilib

    # OS X builds: since those are slow and limited on Travis, we only run testinstall
    - env: TEST_SUITE=testinstall
      os: osx
      compiler: clang

    # test creating the manual
    - env: TEST_SUITE=makemanuals CONFIGFLAGS="--enable-debug"
      addons:
        apt_packages:
          - texlive-latex-base
          - texlive-latex-recommended
          - texlive-latex-extra
          - texlive-extra-utils
          - texlive-fonts-recommended
          - texlive-fonts-extra

    # run tests contained in the manual
    - env: TEST_SUITE=testmanuals CONFIGFLAGS="--enable-debug"

    # HPC-GAP builds (for efficiency, we don't build all combinations)
    # FIXME: the 32bit build removes -O2 to avoid an internal compiler error for vecgf2.c
    - env: TEST_SUITE=testinstall ABI=64 HPCGAP=yes CONFIGFLAGS="--enable-debug"
    - env: TEST_SUITE=testinstall ABI=32 HPCGAP=yes BUILDDIR=build CONFIGFLAGS="--enable-debug --with-gmp=builtin" CFLAGS="-fprofile-arcs -ftest-coverage"

    # out of tree builds -- these are mainly done to verify that the build
    # system work in this scenario. Since we don't expect the test results to
    # vary compared to the in-tree builds, we turn off coverage reporting by
    # setting NO_COVERAGE=1; this has the extra benefit of also running the
    # tests at least once with the ReproducibleBehaviour option turned off.
    - env: TEST_SUITE=testinstall NO_COVERAGE=1 ABI=64 BUILDDIR=build CONFIGFLAGS="--enable-debug"
    - env: TEST_SUITE=testinstall NO_COVERAGE=1 ABI=32 BUILDDIR=build CONFIGFLAGS="--enable-debug"
      sudo: required    # trusty containers are missing libgmp:i386, use sudo-enabled infrastructure instead
      before_install:
        - sudo apt-get -qq update
        - sudo apt-get install libgmp-dev:i386 gcc-multilib g++-multilib

    # run bugfix regression tests
    - env: TEST_SUITE=testbugfix CONFIGFLAGS="--enable-debug"

    # test error reporting (quickest job in this test suite)
    - env: TEST_SUITE=testerror CONFIGFLAGS="--enable-debug"

script:
  - gcov --version
  - bash etc/ci-prepare.sh
  - bash etc/ci.sh

after_script:
  - bash etc/ci-gather-coverage.sh
  - bash <(curl -s https://codecov.io/bash)

notifications:
  slack:
    secure: Nvt9q2kZ/n7HyFeEYt7rvXMBLIR3AqSbQ54UeoU2UFrF+y0vJONChfa0csneyXPApH+objSUgS8ZW3g4gRiKtnO1jzQq9XDe895HtadY4vxYrduRLiwqI4o0k9KFVBPX7uIUXT22qIaAYBFC93m36zQKIAVDFzYuPoQfTWY3Yww=
