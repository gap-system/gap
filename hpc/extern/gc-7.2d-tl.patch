diff -cr gc-7.2d/include/private/gcconfig.h gc-7.2d/include/private/gcconfig.h
*** gc-7.2d/include/private/gcconfig.h	2012-08-09 21:25:13.000000000 +0100
--- gc-7.2d/include/private/gcconfig.h	2013-06-12 23:39:43.000000000 +0100
***************
*** 25,30 ****
--- 25,37 ----
  #ifndef GCCONFIG_H
  #define GCCONFIG_H
  
+ /* Override system-specific block size so that thread-local allocations
+  * are more efficient.
+  */
+ #ifndef HBLKSIZE
+ #define HBLKSIZE 16384
+ #endif
+ 
  # ifndef GC_PRIVATE_H
      /* Fake ptr_t declaration, just to avoid compilation errors.        */
      /* This avoids many instances if "ifndef GC_PRIVATE_H" below.       */
diff -cr gc-7.2d/include/private/gc_priv.h gc-7.2d/include/private/gc_priv.h
*** gc-7.2d/include/private/gc_priv.h	2012-08-09 21:25:13.000000000 +0100
--- gc-7.2d/include/private/gc_priv.h	2013-06-12 23:39:43.000000000 +0100
***************
*** 645,650 ****
--- 645,658 ----
  #   define CPP_LOG_HBLKSIZE 13
  # elif HBLKSIZE == 16384
  #   define CPP_LOG_HBLKSIZE 14
+ # elif HBLKSIZE == 32768
+ #   define CPP_LOG_HBLKSIZE 15
+ # elif HBLKSIZE == 65536
+ #   define CPP_LOG_HBLKSIZE 16
+ # elif HBLKSIZE == 131072
+ #   define CPP_LOG_HBLKSIZE 17
+ # elif HBLKSIZE == 262144
+ #   define CPP_LOG_HBLKSIZE 18
  # else
      --> fix HBLKSIZE
  # endif
diff -cr gc-7.2d/os_dep.c gc-7.2d/os_dep.c
*** gc-7.2d/os_dep.c	2012-08-09 21:25:13.000000000 +0100
--- gc-7.2d/os_dep.c	2013-07-12 11:35:03.000000000 +0100
***************
*** 727,732 ****
--- 727,734 ----
          }
        }
  #   endif
+     if (HBLKSIZE > GC_page_size)
+       GC_page_size = HBLKSIZE;
    }
  
  # ifndef CYGWIN32
***************
*** 783,788 ****
--- 785,792 ----
  #   if defined(MPROTECT_VDB) || defined(PROC_VDB) || defined(USE_MMAP)
        GC_page_size = GETPAGESIZE();
        if (!GC_page_size) ABORT("getpagesize() failed");
+       if (HBLKSIZE > GC_page_size)
+         GC_page_size = HBLKSIZE;
  #   else
        /* It's acceptable to fake it.    */
        GC_page_size = HBLKSIZE;
***************
*** 2047,2058 ****
--- 2052,2074 ----
  #   endif
  
      if (bytes & (GC_page_size - 1)) ABORT("Bad GET_MEM arg");
+     bytes += GC_page_size;
      result = mmap(last_addr, bytes, (PROT_READ | PROT_WRITE)
                                      | (GC_pages_executable ? PROT_EXEC : 0),
                    GC_MMAP_FLAGS | OPT_MAP_ANON, zero_fd, 0/* offset */);
  #   undef IGNORE_PAGES_EXECUTABLE
  
      if (result == MAP_FAILED) return(0);
+ 
+     if ((word) result & (GC_page_size - 1)) {
+         word delta = (word) result & (GC_page_size - 1);
+         munmap(result, delta);
+         result = (char *) result + delta;
+         munmap((char *) result + bytes, GC_page_size - delta);
+     } else {
+         munmap((char *) result + bytes, GC_page_size);
+     }
+ 
      last_addr = (ptr_t)result + bytes + GC_page_size - 1;
      last_addr = (ptr_t)((word)last_addr & ~(GC_page_size - 1));
  #   if !defined(LINUX)
