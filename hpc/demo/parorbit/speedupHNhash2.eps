%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, March 7, 2013 1:18:17 PM GMT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
15.1000 2.00547 369.894 364.994 rc
newpath
16.1000 366.000 m
49.4540 325.929 l
82.8081 285.935 l
116.162 245.666 l
149.516 217.689 l
182.870 172.319 l
216.224 141.071 l
249.578 152.259 l
282.932 80.0878 l
316.286 42.3076 l
349.640 34.8122 l
382.994 4.00549 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
13.1000 369.000 m
382.994 369.000 l
S
Q
q
q
0 J
1 j
newpath
49.4540 369.000 m
49.4540 374.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
56.9531 388.343 m
56.3593 390.000 l
51.2812 390.000 l
51.2812 389.765 l
52.7708 388.401 53.8203 387.286 54.4296 386.421  c
55.0390 385.557 55.3437 384.770 55.3437 384.062  c
55.3437 383.510 55.1770 383.059 54.8437 382.710  c
54.5104 382.362 54.1093 382.187 53.6406 382.187  c
53.2239 382.187 52.8463 382.309 52.5078 382.554  c
52.1692 382.799 51.9218 383.161 51.7656 383.640  c
51.5312 383.640 l
51.6354 382.859 51.9062 382.260 52.3437 381.843  c
52.7812 381.427 53.3281 381.218 53.9843 381.218  c
54.6822 381.218 55.2656 381.442 55.7343 381.890  c
56.2031 382.338 56.4375 382.864 56.4375 383.468  c
56.4375 383.906 56.3333 384.343 56.1250 384.781  c
55.8125 385.468 55.3072 386.192 54.6093 386.953  c
53.5572 388.109 52.8958 388.807 52.6250 389.046  c
54.8750 389.046 l
55.3333 389.046 55.6536 389.028 55.8359 388.992  c
56.0182 388.955 56.1849 388.885 56.3359 388.781  c
56.4869 388.677 56.6145 388.531 56.7187 388.343  c
56.9531 388.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
116.162 369.000 m
116.162 374.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
124.046 386.828 m
124.046 387.734 l
122.890 387.734 l
122.890 390.000 l
121.843 390.000 l
121.843 387.734 l
118.203 387.734 l
118.203 386.921 l
122.203 381.218 l
122.890 381.218 l
122.890 386.828 l
124.046 386.828 l
h
121.843 386.828 m
121.843 382.546 l
118.828 386.828 l
121.843 386.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
182.870 369.000 m
182.870 374.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
189.828 381.218 m
189.828 381.453 l
189.265 381.505 188.807 381.614 188.453 381.781  c
188.099 381.947 187.750 382.203 187.406 382.546  c
187.062 382.890 186.778 383.273 186.554 383.695  c
186.330 384.117 186.140 384.614 185.984 385.187  c
186.599 384.770 187.213 384.562 187.828 384.562  c
188.411 384.562 188.919 384.799 189.351 385.273  c
189.783 385.747 190.000 386.359 190.000 387.109  c
190.000 387.828 189.781 388.484 189.343 389.078  c
188.822 389.796 188.130 390.156 187.265 390.156  c
186.671 390.156 186.171 389.958 185.765 389.562  c
184.963 388.812 184.562 387.833 184.562 386.625  c
184.562 385.854 184.716 385.122 185.023 384.429  c
185.330 383.737 185.770 383.119 186.343 382.578  c
186.916 382.036 187.466 381.674 187.992 381.492  c
188.518 381.309 189.005 381.218 189.453 381.218  c
189.828 381.218 l
h
185.875 385.656 m
185.802 386.229 185.765 386.692 185.765 387.046  c
185.765 387.453 185.841 387.893 185.992 388.367  c
186.143 388.841 186.364 389.218 186.656 389.500  c
186.875 389.697 187.140 389.796 187.453 389.796  c
187.817 389.796 188.145 389.622 188.437 389.273  c
188.729 388.924 188.875 388.432 188.875 387.796  c
188.875 387.067 188.729 386.440 188.437 385.914  c
188.145 385.388 187.739 385.125 187.218 385.125  c
187.052 385.125 186.877 385.158 186.695 385.226  c
186.513 385.294 186.239 385.437 185.875 385.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
249.578 369.000 m
249.578 374.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
253.500 385.671 m
252.812 385.109 252.369 384.658 252.171 384.320  c
251.974 383.981 251.875 383.630 251.875 383.265  c
251.875 382.703 252.091 382.221 252.523 381.820  c
252.955 381.419 253.531 381.218 254.250 381.218  c
254.947 381.218 255.507 381.406 255.929 381.781  c
256.351 382.156 256.562 382.583 256.562 383.062  c
256.562 383.385 256.447 383.713 256.218 384.046  c
255.989 384.380 255.515 384.776 254.796 385.234  c
255.536 385.807 256.026 386.260 256.265 386.593  c
256.588 387.020 256.750 387.474 256.750 387.953  c
256.750 388.557 256.520 389.075 256.062 389.507  c
255.604 389.940 255.000 390.156 254.250 390.156  c
253.427 390.156 252.786 389.901 252.328 389.390  c
251.963 388.974 251.781 388.520 251.781 388.031  c
251.781 387.656 251.911 387.281 252.171 386.906  c
252.432 386.531 252.875 386.119 253.500 385.671  c
h
254.484 384.984 m
254.994 384.526 255.317 384.164 255.453 383.898  c
255.588 383.632 255.656 383.333 255.656 383.000  c
255.656 382.562 255.531 382.216 255.281 381.960  c
255.031 381.705 254.692 381.578 254.265 381.578  c
253.828 381.578 253.474 381.703 253.203 381.953  c
252.932 382.203 252.796 382.494 252.796 382.828  c
252.796 383.046 252.854 383.268 252.968 383.492  c
253.083 383.716 253.244 383.927 253.453 384.125  c
254.484 384.984 l
h
253.796 385.906 m
253.442 386.197 253.182 386.518 253.015 386.867  c
252.849 387.216 252.765 387.593 252.765 388.000  c
252.765 388.552 252.914 388.992 253.210 389.320  c
253.507 389.648 253.885 389.812 254.343 389.812  c
254.802 389.812 255.169 389.682 255.445 389.421  c
255.721 389.161 255.859 388.849 255.859 388.484  c
255.859 388.182 255.776 387.906 255.609 387.656  c
255.317 387.208 254.713 386.625 253.796 385.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
316.286 369.000 m
316.286 374.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
316.531 382.234 m
318.625 381.218 l
318.828 381.218 l
318.828 388.484 l
318.828 388.963 318.849 389.263 318.890 389.382  c
318.932 389.502 319.015 389.593 319.140 389.656  c
319.265 389.718 319.520 389.755 319.906 389.765  c
319.906 390.000 l
316.671 390.000 l
316.671 389.765 l
317.078 389.755 317.341 389.718 317.460 389.656  c
317.580 389.593 317.664 389.510 317.710 389.406  c
317.757 389.302 317.781 388.994 317.781 388.484  c
317.781 383.843 l
317.781 383.208 317.760 382.802 317.718 382.625  c
317.687 382.489 317.632 382.390 317.554 382.328  c
317.476 382.265 317.380 382.234 317.265 382.234  c
317.109 382.234 316.895 382.302 316.625 382.437  c
316.531 382.234 l
h
321.468 385.750 m
321.468 384.770 321.617 383.924 321.914 383.210  c
322.210 382.497 322.604 381.968 323.093 381.625  c
323.479 381.354 323.875 381.218 324.281 381.218  c
324.937 381.218 325.526 381.552 326.046 382.218  c
326.703 383.052 327.031 384.182 327.031 385.609  c
327.031 386.609 326.888 387.458 326.601 388.156  c
326.315 388.854 325.947 389.362 325.500 389.679  c
325.052 389.997 324.625 390.156 324.218 390.156  c
323.395 390.156 322.708 389.671 322.156 388.703  c
321.697 387.880 321.468 386.895 321.468 385.750  c
h
322.718 385.906 m
322.718 387.093 322.864 388.062 323.156 388.812  c
323.395 389.437 323.755 389.750 324.234 389.750  c
324.463 389.750 324.700 389.648 324.945 389.445  c
325.190 389.242 325.375 388.895 325.500 388.406  c
325.697 387.687 325.796 386.661 325.796 385.328  c
325.796 384.349 325.692 383.531 325.484 382.875  c
325.338 382.385 325.140 382.041 324.890 381.843  c
324.724 381.708 324.515 381.640 324.265 381.640  c
323.984 381.640 323.729 381.765 323.500 382.015  c
323.197 382.369 322.992 382.924 322.882 383.679  c
322.773 384.434 322.718 385.177 322.718 385.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
382.994 369.000 m
382.994 374.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
382.531 382.234 m
384.625 381.218 l
384.828 381.218 l
384.828 388.484 l
384.828 388.963 384.849 389.263 384.890 389.382  c
384.932 389.502 385.015 389.593 385.140 389.656  c
385.265 389.718 385.520 389.755 385.906 389.765  c
385.906 390.000 l
382.671 390.000 l
382.671 389.765 l
383.078 389.755 383.341 389.718 383.460 389.656  c
383.580 389.593 383.664 389.510 383.710 389.406  c
383.757 389.302 383.781 388.994 383.781 388.484  c
383.781 383.843 l
383.781 383.208 383.760 382.802 383.718 382.625  c
383.687 382.489 383.632 382.390 383.554 382.328  c
383.476 382.265 383.380 382.234 383.265 382.234  c
383.109 382.234 382.895 382.302 382.625 382.437  c
382.531 382.234 l
h
392.953 388.343 m
392.359 390.000 l
387.281 390.000 l
387.281 389.765 l
388.770 388.401 389.820 387.286 390.429 386.421  c
391.039 385.557 391.343 384.770 391.343 384.062  c
391.343 383.510 391.177 383.059 390.843 382.710  c
390.510 382.362 390.109 382.187 389.640 382.187  c
389.224 382.187 388.846 382.309 388.507 382.554  c
388.169 382.799 387.921 383.161 387.765 383.640  c
387.531 383.640 l
387.635 382.859 387.906 382.260 388.343 381.843  c
388.781 381.427 389.328 381.218 389.984 381.218  c
390.682 381.218 391.265 381.442 391.734 381.890  c
392.203 382.338 392.437 382.864 392.437 383.468  c
392.437 383.906 392.333 384.343 392.125 384.781  c
391.812 385.468 391.307 386.192 390.609 386.953  c
389.557 388.109 388.895 388.807 388.625 389.046  c
390.875 389.046 l
391.333 389.046 391.653 389.028 391.835 388.992  c
392.018 388.955 392.184 388.885 392.335 388.781  c
392.487 388.677 392.614 388.531 392.718 388.343  c
392.953 388.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
16.1000 369.000 m
16.1000 371.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
82.8081 369.000 m
82.8081 371.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
149.516 369.000 m
149.516 371.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
216.224 369.000 m
216.224 371.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
282.932 369.000 m
282.932 371.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
349.640 369.000 m
349.640 371.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
13.1000 369.000 m
13.1000 4.00549 l
S
Q
q
q
0 J
1 j
newpath
13.1000 366.000 m
7.89999 366.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
7.53125 368.234 m
9.62500 367.218 l
9.82812 367.218 l
9.82812 374.484 l
9.82812 374.963 9.84895 375.263 9.89062 375.382  c
9.93229 375.502 10.0156 375.593 10.1406 375.656  c
10.2656 375.718 10.5208 375.755 10.9062 375.765  c
10.9062 376.000 l
7.67187 376.000 l
7.67187 375.765 l
8.07812 375.755 8.34114 375.718 8.46093 375.656  c
8.58072 375.593 8.66406 375.510 8.71093 375.406  c
8.75781 375.302 8.78125 374.994 8.78125 374.484  c
8.78125 369.843 l
8.78125 369.208 8.76041 368.802 8.71875 368.625  c
8.68750 368.489 8.63281 368.390 8.55468 368.328  c
8.47656 368.265 8.38020 368.234 8.26562 368.234  c
8.10937 368.234 7.89583 368.302 7.62500 368.437  c
7.53125 368.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 323.452 m
7.89999 323.452 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
11.9531 331.343 m
11.3593 333.000 l
6.28125 333.000 l
6.28125 332.765 l
7.77083 331.401 8.82031 330.286 9.42968 329.421  c
10.0390 328.557 10.3437 327.770 10.3437 327.062  c
10.3437 326.510 10.1770 326.059 9.84375 325.710  c
9.51041 325.362 9.10937 325.187 8.64062 325.187  c
8.22395 325.187 7.84635 325.309 7.50781 325.554  c
7.16927 325.799 6.92187 326.161 6.76562 326.640  c
6.53125 326.640 l
6.63541 325.859 6.90625 325.260 7.34375 324.843  c
7.78125 324.427 8.32812 324.218 8.98437 324.218  c
9.68229 324.218 10.2656 324.442 10.7343 324.890  c
11.2031 325.338 11.4375 325.864 11.4375 326.468  c
11.4375 326.906 11.3333 327.343 11.1250 327.781  c
10.8125 328.468 10.3072 329.192 9.60937 329.953  c
8.55729 331.109 7.89583 331.807 7.62500 332.046  c
9.87500 332.046 l
10.3333 332.046 10.6536 332.028 10.8359 331.992  c
11.0182 331.955 11.1849 331.885 11.3359 331.781  c
11.4869 331.677 11.6145 331.531 11.7187 331.343  c
11.9531 331.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 280.905 m
7.89999 280.905 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.65625 283.031 m
6.90625 282.447 7.21875 282.000 7.59375 281.687  c
7.96875 281.375 8.43229 281.218 8.98437 281.218  c
9.68229 281.218 10.2135 281.442 10.5781 281.890  c
10.8593 282.224 11.0000 282.578 11.0000 282.953  c
11.0000 283.588 10.6041 284.239 9.81250 284.906  c
10.3437 285.114 10.7447 285.411 11.0156 285.796  c
11.2864 286.182 11.4218 286.635 11.4218 287.156  c
11.4218 287.895 11.1822 288.536 10.7031 289.078  c
10.0885 289.796 9.19791 290.156 8.03125 290.156  c
7.44791 290.156 7.05208 290.083 6.84375 289.937  c
6.63541 289.791 6.53125 289.635 6.53125 289.468  c
6.53125 289.343 6.58072 289.237 6.67968 289.148  c
6.77864 289.059 6.89583 289.015 7.03125 289.015  c
7.13541 289.015 7.24479 289.031 7.35937 289.062  c
7.43229 289.083 7.59635 289.158 7.85156 289.289  c
8.10677 289.419 8.28125 289.500 8.37500 289.531  c
8.53125 289.572 8.69791 289.593 8.87500 289.593  c
9.30208 289.593 9.67708 289.427 10.0000 289.093  c
10.3229 288.760 10.4843 288.364 10.4843 287.906  c
10.4843 287.572 10.4114 287.250 10.2656 286.937  c
10.1510 286.697 10.0260 286.515 9.89062 286.390  c
9.71354 286.224 9.46614 286.072 9.14843 285.937  c
8.83072 285.802 8.50520 285.734 8.17187 285.734  c
7.96875 285.734 l
7.96875 285.531 l
8.30208 285.489 8.63802 285.369 8.97656 285.171  c
9.31510 284.974 9.55989 284.737 9.71093 284.460  c
9.86197 284.184 9.93750 283.875 9.93750 283.531  c
9.93750 283.104 9.80208 282.755 9.53125 282.484  c
9.26041 282.213 8.92187 282.078 8.51562 282.078  c
7.85937 282.078 7.31250 282.427 6.87500 283.125  c
6.65625 283.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 238.358 m
7.89999 238.358 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
12.0468 244.828 m
12.0468 245.734 l
10.8906 245.734 l
10.8906 248.000 l
9.84375 248.000 l
9.84375 245.734 l
6.20312 245.734 l
6.20312 244.921 l
10.2031 239.218 l
10.8906 239.218 l
10.8906 244.828 l
12.0468 244.828 l
h
9.84375 244.828 m
9.84375 240.546 l
6.82812 244.828 l
9.84375 244.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 195.811 m
7.89999 195.811 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
11.6406 196.390 m
11.1406 197.468 l
8.56250 197.468 l
8.00000 198.625 l
9.11458 198.791 10.0000 199.208 10.6562 199.875  c
11.2187 200.447 11.5000 201.125 11.5000 201.906  c
11.5000 202.364 11.4088 202.786 11.2265 203.171  c
11.0442 203.557 10.8125 203.885 10.5312 204.156  c
10.2500 204.427 9.93750 204.640 9.59375 204.796  c
9.11458 205.036 8.61458 205.156 8.09375 205.156  c
7.58333 205.156 7.21093 205.067 6.97656 204.890  c
6.74218 204.713 6.62500 204.520 6.62500 204.312  c
6.62500 204.187 6.67447 204.080 6.77343 203.992  c
6.87239 203.903 6.99479 203.859 7.14062 203.859  c
7.24479 203.859 7.33854 203.875 7.42187 203.906  c
7.50520 203.937 7.64583 204.026 7.84375 204.171  c
8.16666 204.390 8.48958 204.500 8.81250 204.500  c
9.31250 204.500 9.74739 204.312 10.1171 203.937  c
10.4869 203.562 10.6718 203.104 10.6718 202.562  c
10.6718 202.041 10.5052 201.557 10.1718 201.109  c
9.83854 200.661 9.38020 200.312 8.79687 200.062  c
8.32812 199.875 7.69791 199.765 6.90625 199.734  c
8.56250 196.390 l
11.6406 196.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 153.264 m
7.89999 153.264 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
11.8281 154.218 m
11.8281 154.453 l
11.2656 154.505 10.8072 154.614 10.4531 154.781  c
10.0989 154.947 9.75000 155.203 9.40625 155.546  c
9.06250 155.890 8.77864 156.273 8.55468 156.695  c
8.33072 157.117 8.14062 157.614 7.98437 158.187  c
8.59895 157.770 9.21354 157.562 9.82812 157.562  c
10.4114 157.562 10.9192 157.799 11.3515 158.273  c
11.7838 158.747 12.0000 159.359 12.0000 160.109  c
12.0000 160.828 11.7812 161.484 11.3437 162.078  c
10.8229 162.796 10.1302 163.156 9.26562 163.156  c
8.67187 163.156 8.17187 162.958 7.76562 162.562  c
6.96354 161.812 6.56250 160.833 6.56250 159.625  c
6.56250 158.854 6.71614 158.122 7.02343 157.429  c
7.33072 156.737 7.77083 156.119 8.34375 155.578  c
8.91666 155.036 9.46614 154.674 9.99218 154.492  c
10.5182 154.309 11.0052 154.218 11.4531 154.218  c
11.8281 154.218 l
h
7.87500 158.656 m
7.80208 159.229 7.76562 159.692 7.76562 160.046  c
7.76562 160.453 7.84114 160.893 7.99218 161.367  c
8.14322 161.841 8.36458 162.218 8.65625 162.500  c
8.87500 162.697 9.14062 162.796 9.45312 162.796  c
9.81770 162.796 10.1458 162.622 10.4375 162.273  c
10.7291 161.924 10.8750 161.432 10.8750 160.796  c
10.8750 160.067 10.7291 159.440 10.4375 158.914  c
10.1458 158.388 9.73958 158.125 9.21875 158.125  c
9.05208 158.125 8.87760 158.158 8.69531 158.226  c
8.51302 158.294 8.23958 158.437 7.87500 158.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 110.716 m
7.89999 110.716 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
7.31250 111.390 m
11.9218 111.390 l
11.9218 111.640 l
9.04687 120.171 l
8.34375 120.171 l
10.9062 112.421 l
8.54687 112.421 l
8.06770 112.421 7.72916 112.479 7.53125 112.593  c
7.16666 112.791 6.88020 113.093 6.67187 113.500  c
6.48437 113.437 l
7.31250 111.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 68.1697 m
7.89999 68.1697 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
8.50000 73.6718 m
7.81250 73.1093 7.36979 72.6588 7.17187 72.3203  c
6.97395 71.9817 6.87500 71.6302 6.87500 71.2656  c
6.87500 70.7031 7.09114 70.2213 7.52343 69.8203  c
7.95572 69.4192 8.53125 69.2187 9.25000 69.2187  c
9.94791 69.2187 10.5078 69.4062 10.9296 69.7812  c
11.3515 70.1562 11.5625 70.5833 11.5625 71.0625  c
11.5625 71.3854 11.4479 71.7135 11.2187 72.0468  c
10.9895 72.3802 10.5156 72.7760 9.79687 73.2343  c
10.5364 73.8072 11.0260 74.2604 11.2656 74.5937  c
11.5885 75.0208 11.7500 75.4739 11.7500 75.9531  c
11.7500 76.5572 11.5208 77.0755 11.0625 77.5078  c
10.6041 77.9401 10.0000 78.1562 9.25000 78.1562  c
8.42708 78.1562 7.78645 77.9010 7.32812 77.3906  c
6.96354 76.9739 6.78125 76.5208 6.78125 76.0312  c
6.78125 75.6562 6.91145 75.2812 7.17187 74.9062  c
7.43229 74.5312 7.87500 74.1197 8.50000 73.6718  c
h
9.48437 72.9843 m
9.99479 72.5260 10.3177 72.1640 10.4531 71.8984  c
10.5885 71.6328 10.6562 71.3333 10.6562 71.0000  c
10.6562 70.5625 10.5312 70.2161 10.2812 69.9609  c
10.0312 69.7057 9.69270 69.5781 9.26562 69.5781  c
8.82812 69.5781 8.47395 69.7031 8.20312 69.9531  c
7.93229 70.2031 7.79687 70.4947 7.79687 70.8281  c
7.79687 71.0468 7.85416 71.2682 7.96875 71.4921  c
8.08333 71.7161 8.24479 71.9270 8.45312 72.1250  c
9.48437 72.9843 l
h
8.79687 73.9062 m
8.44270 74.1979 8.18229 74.5182 8.01562 74.8671  c
7.84895 75.2161 7.76562 75.5937 7.76562 76.0000  c
7.76562 76.5520 7.91406 76.9921 8.21093 77.3203  c
8.50781 77.6484 8.88541 77.8125 9.34375 77.8125  c
9.80208 77.8125 10.1692 77.6822 10.4453 77.4218  c
10.7213 77.1614 10.8593 76.8489 10.8593 76.4843  c
10.8593 76.1822 10.7760 75.9062 10.6093 75.6562  c
10.3177 75.2083 9.71354 74.6250 8.79687 73.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 25.6225 m
7.89999 25.6225 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.68750 35.1718 m
6.68750 34.9375 l
7.23958 34.9375 7.75260 34.8125 8.22656 34.5625  c
8.70052 34.3125 9.15885 33.8776 9.60156 33.2578  c
10.0442 32.6380 10.3489 31.9583 10.5156 31.2187  c
9.84895 31.6458 9.25000 31.8593 8.71875 31.8593  c
8.11458 31.8593 7.59635 31.6276 7.16406 31.1640  c
6.73177 30.7005 6.51562 30.0781 6.51562 29.2968  c
6.51562 28.5468 6.72916 27.8750 7.15625 27.2812  c
7.67708 26.5729 8.35937 26.2187 9.20312 26.2187  c
9.91145 26.2187 10.5156 26.5104 11.0156 27.0937  c
11.6302 27.8125 11.9375 28.7031 11.9375 29.7656  c
11.9375 30.7239 11.7031 31.6171 11.2343 32.4453  c
10.7656 33.2734 10.1145 33.9583 9.28125 34.5000  c
8.59375 34.9479 7.84895 35.1718 7.04687 35.1718  c
6.68750 35.1718 l
h
10.6250 30.7500 m
10.6979 30.1979 10.7343 29.7604 10.7343 29.4375  c
10.7343 29.0208 10.6640 28.5755 10.5234 28.1015  c
10.3828 27.6276 10.1849 27.2630 9.92968 27.0078  c
9.67447 26.7526 9.38541 26.6250 9.06250 26.6250  c
8.68750 26.6250 8.35677 26.7942 8.07031 27.1328  c
7.78385 27.4713 7.64062 27.9739 7.64062 28.6406  c
7.64062 29.5364 7.82812 30.2343 8.20312 30.7343  c
8.48437 31.0989 8.82291 31.2812 9.21875 31.2812  c
9.41666 31.2812 9.64843 31.2343 9.91406 31.1406  c
10.1796 31.0468 10.4166 30.9166 10.6250 30.7500  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 344.726 m
10.5000 344.726 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 302.179 m
10.5000 302.179 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 259.632 m
10.5000 259.632 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 217.084 m
10.5000 217.084 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 174.537 m
10.5000 174.537 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 131.990 m
10.5000 131.990 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 89.4433 m
10.5000 89.4433 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 46.8961 m
10.5000 46.8961 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 J
1 j
newpath
13.1000 4.34899 m
10.5000 4.34899 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
