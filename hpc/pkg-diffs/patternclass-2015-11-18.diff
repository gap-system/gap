diff --git a/PackageInfo.g b/PackageInfo.g
index 68beb41..de0d829 100644
--- a/PackageInfo.g
+++ b/PackageInfo.g
@@ -38,7 +38,7 @@ Subtitle := "A permutation pattern class package",
 ##  See '?Extending: Version Numbers' in GAP help for an explanation
 ##  of valid version numbers. For an automatic package distribution update
 ##  you must provide a new version number even after small changes.
-Version := "2.1",
+Version := "2.0",
 
 ##  Release date of the current version in dd/mm/yyyy format.
 ##
@@ -53,7 +53,7 @@ Date := "27/08/2015",
 ##  example/init.g, ...    or  example-1.3/init.g, ...  )
 # 
 ArchiveURL := 
-          "https://github.com/ruthhoffmann/PatternClass/releases/download/2.1/PatternClass2.1",
+          "https://github.com/ruthhoffmann/PatternClass/releases/download/2.0/PatternClass2.0",
 
 ##  All provided formats as list of file extensions, separated by white
 ##  space or commas.
@@ -260,8 +260,8 @@ PackageDoc := rec(
   # use same as in GAP            
   BookName  := "PatternClass",
   # format/extension can be one of .zoo, .tar.gz, .tar.bz2, -win.zip
-#  Archive := 
-#          "https://github.com/ruthhoffmann/PatternClass/releases/download/2.1/PatternClass2.1.tar.gz",
+  Archive := 
+          "https://github.com/ruthhoffmann/PatternClass/releases/download/2.0/PatternClass2.0.tar.gz",
   ArchiveURLSubset := ["doc"],
   HTMLStart := "doc/chap0.html",
   PDFFile   := "doc/manual.pdf",
diff --git a/README b/README
index 6b01376..f67ff28 100644
--- a/README
+++ b/README
@@ -12,7 +12,7 @@ patched functions are located in lib/aux.* .
 Introduction
 ------------
 
-This is version 2.1 of the 'PatternClass' package.
+This is version 2.0 of the 'PatternClass' package.
 
 The 'PatternClass' package allows you to explore the permutation
 pattern classes build by token passing networks.
@@ -52,12 +52,12 @@ If you get 'PatternClass' as a compressed file unpack it in the pkg/ folder
 in the gap4r4 folder where GAP is installed on your computer.
 To uncompress the .tar.gz file on UNIX use the following command
 
-   tar xzf PatternClass2.1.tar.gz
+   tar xzf PatternClass2.0.tar.gz
 
 If your version of tar does not support the z option use
 
-   gunzip PatternClass2.1.tar.gz
-   tar xf PatternClass2.1.tar
+   gunzip PatternClass2.0.tar.gz
+   tar xf PatternClass2.0.tar
 
 This will create the folder PatternClass in pkg/ and within that
 you will find the directories and files mentioned above.
@@ -66,7 +66,7 @@ To use the package within GAP, run GAP and type the following
 
 gap> LoadPackage("PatternClass");
 ----------------------------------------------------------------
-Loading  PatternClass 2.1
+Loading  PatternClass 2.0
 For help, type: ?PatternClass: 
 ----------------------------------------------------------------
 true
@@ -80,11 +80,6 @@ online or within GAP help.
 
 Changes
 -------
-Changes from 2.0 to 2.1:
-- Removed all unnecessary files from the archive.
-- Fixed PackageInfo, such that no warnings are thrown.
-<<<>>><<<>>><<<>>><<<>>>
-
 Changes from 1.12358132134 to 2.0:
 - Package is now being hosted on GitHub!
 - Updated maintainers details
diff --git a/doc/manual.xml b/doc/manual.xml
index d2787e6..aeaa2cf 100644
--- a/doc/manual.xml
+++ b/doc/manual.xml
@@ -9,7 +9,7 @@
   <TitlePage>
     <Title>PatternClass</Title> 
     <Subtitle>Permutation Pattern Classes</Subtitle> 
-    <Version>Version 2.1</Version> 
+    <Version>Version 2.0</Version> 
     <Author>Michael Albert <Email> malbert at cs.otago.ac.nz</Email></Author> 
     <Author>Steve Linton <Email> sl4 at st-andrews.ac.uk</Email></Author> 
     <Author>Ruth Hoffmann <Email> rh347 at icloud.com</Email></Author> 
diff --git a/lib/automata.gi b/lib/automata.gi
index b73e8e7..9216e2f 100644
--- a/lib/automata.gi
+++ b/lib/automata.gi
@@ -176,7 +176,7 @@ if mA <> mB then
 fi;
 
 QA := A!.states;
-T := StructuralCopy( A!.transitions );
+T := List( A!.transitions, ShallowCopy );
 if A!.type <> "epsilon" and B!.type = "epsilon" then
 	Add(T,[]);
 fi;	
diff --git a/lib/classAndBasis.gd b/lib/classAndBasis.gd
index acbfadd..ff991af 100644
--- a/lib/classAndBasis.gd
+++ b/lib/classAndBasis.gd
@@ -18,7 +18,7 @@
 ##  Returns an automaton, that accepts all rank encoded permutations with
 ##  highest letter being k.
 ##
-DeclareGlobalVariable( "BOUNDED_CLASS_AUTOMATA_CACHE");
+
 DeclareGlobalFunction( "BoundedClassAutomaton" );
 
 #############################################################################
diff --git a/lib/classAndBasis.gi b/lib/classAndBasis.gi
index bfa90e8..8ce7611 100644
--- a/lib/classAndBasis.gi
+++ b/lib/classAndBasis.gi
@@ -19,7 +19,16 @@
 ##  highest letter being k.
 ##
 
-InstallFlushableValue(BOUNDED_CLASS_AUTOMATA_CACHE,[]);
+BOUNDED_CLASS_AUTOMATA_CACHE :=  MakeWriteOnceAtomic([]);
+
+InstallMethod(FlushCaches, [],function()
+    BOUNDED_CLASS_AUTOMATA_CACHE := MakeWriteOnceAtomic([]);
+    TryNextMethod();
+end);
+
+    
+
+
 
 InstallGlobalFunction(BoundedClassAutomaton, function(k)
     local   states,  alphabet,  trans,  i,  j;
diff --git a/lib/decomp.gi b/lib/decomp.gi
index 5b0f35d..a19b964 100644
--- a/lib/decomp.gi
+++ b/lib/decomp.gi
@@ -140,7 +140,7 @@ InstallGlobalFunction(PlusIndecomposableAut,function(aut)
     states:=NumberStatesOfAutomaton(temp)+2;
     fin:=FinalStatesOfAutomaton(temp);
     acc:=Concatenation([states-1],fin);
-    trans:=StructuralCopy(TransitionMatrixOfAutomaton(temp));
+    trans:=List(TransitionMatrixOfAutomaton(temp), ShallowCopy);
 
     for i in [1..Length(TransitionMatrixOfAutomaton(temp))] do
     	Add(trans[i],trans[i][1],states-1);
diff --git a/lib/inversion.gi b/lib/inversion.gi
index 70be69f..acfb3ce 100644
--- a/lib/inversion.gi
+++ b/lib/inversion.gi
@@ -77,7 +77,7 @@ end );
 InstallGlobalFunction(LoopFreeAut,function(a)
 local trans,j,i;
 
-trans:=StructuralCopy(a!.transitions);
+trans:=List(a!.transitions, ShallowCopy);
 
 for j in [1..Length(trans[1])] do 
     for i in [1..Length(trans)] do
@@ -105,7 +105,7 @@ local acc,ll,trans,i,j,x,sink;
 
 acc:=FinalStatesOfAutomaton(a);
 ll:=[];
-trans:=StructuralCopy(a!.transitions);
+trans:=List(a!.transitions, ShallowCopy);
 sink:=a!.states+1;
 
 for i in [1..Length(trans)] do
diff --git a/tst/testall.g b/tst/testall.g
index 1e95553..c562171 100644
--- a/tst/testall.g
+++ b/tst/testall.g
@@ -1,9 +1,10 @@
-ReadTest("chap2.tst");
-ReadTest("chap3.tst");
-ReadTest("chap4.tst");
-ReadTest("chap5.tst");
-ReadTest("chap6.tst");
-ReadTest("chap7.tst");
-ReadTest("chap8.tst");
-ReadTest("chap9.tst");
-ReadTest("chap10.tst");
+d := DirectoriesPackageLibrary("patternclass");
+Test(Filename(d,"../tst/chap2.tst"),rec(compareFunction := "uptowhitespace"));
+Test(Filename(d,"../tst/chap3.tst"),rec(compareFunction := "uptowhitespace"));
+Test(Filename(d,"../tst/chap4.tst"),rec(compareFunction := "uptowhitespace"));
+Test(Filename(d,"../tst/chap5.tst"),rec(compareFunction := "uptowhitespace"));
+Test(Filename(d,"../tst/chap6.tst"),rec(compareFunction := "uptowhitespace"));
+Test(Filename(d,"../tst/chap7.tst"),rec(compareFunction := "uptowhitespace"));
+Test(Filename(d,"../tst/chap8.tst"),rec(compareFunction := "uptowhitespace"));
+Test(Filename(d,"../tst/chap9.tst"),rec(compareFunction := "uptowhitespace"));
+Test(Filename(d,"../tst/chap10.tst"),rec(compareFunction := "uptowhitespace"));
