%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Format 'yyyy/mm/dd'
!! Date
2013/03/08

!! Changed by
MH

! Reported by
BH, MN

!! Type of Change
Fix: crash

!! Description
GAP can store vectors over small finite fields (size at most 256) in a
special internal data representation where each entry of the vector uses
exactly one byte. Due to an off-by-one bug, the case of a field with
exactly 256 elements was not handled properly. As a result, GAP failed
to convert a vector to the special data representation, which in some
situations could lead to a crash. The off-by-one error was fixed and now
vectors over GF(256) work as expected.

This addresses issues #309 and #326 on the GAP issue tracker.

! Test Code
gap> v:=[ Z(2^4)^3, Z(2^4)^6, Z(2)^0 ];
[ Z(2^4)^3, Z(2^4)^6, Z(2)^0 ]
gap> ConvertToVectorRepNC(v,256);
256
gap> RepresentationsOfObject(v);
[ "IsDataObjectRep", "Is8BitVectorRep" ]
gap> R:=PolynomialRing( GF(2^8) );
GF(2^8)[x_1]
gap> x := Indeterminate(GF(2^8));
x_1
gap> f := x^2+Z(2^4)^6*x+Z(2^4)^3;
x_1^2+Z(2^4)^6*x_1+Z(2^4)^3
gap> Length( FactorsSquarefree( R, f, rec() ) );
2

!! Changeset
lib/vecmat.gi

!! End
