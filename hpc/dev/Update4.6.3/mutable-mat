%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Format 'yyyy/mm/dd'
!! Date
2013/02/28

!! Changed by
MH

!! Type of Change
New: extended functionality
New: improved documentation
Fix: efficiency issue

!! Description
Several changes were made to IdentityMat and NullMat. First off, the
documentation was changed to properly state that these functions support
arbitrary rings, and not just fields. Also, more usage examples were
added to the manual.

For NullMat, it is now also always possible to specify a ring element
instead of a ring, and this is documented. This matches existing
IdentityMat behavior, and partially worked before (undocumented),
but in some cases could run into error or infinite recursion.

In the other direction, if a finite field element, IdentityMat now
really creates a matrix over the smallest field containing that element.
Previously, a matrix over the prime field was created instead, contrary
to the documentation.

Furthermore, IdentityMat over small finite fields is now substantially
faster when creating matrices of large dimension (say a thousand or so).

Finally, MutableIdentityMat and MutableNullMat were explicitly declared
obsolete (and may be removed in GAP 4.7). They actually were deprecated
since GAP 4.1, and their use discouraged by the manual. Code using
them should switch to IdentityMat respectively NullMat.

! Test Code
gap> NullMat(2,1,ZmodnZObj(1,15));
[ [ ZmodnZObj( 0, 15 ) ], [ ZmodnZObj( 0, 15 ) ] ]
gap> IdentityMat(10,Z(4));
< mutable compressed matrix 10x10 over GF(4) >

!! Changeset
mh/identitymat2

!! End
