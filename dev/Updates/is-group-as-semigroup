%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Format 'yyyy/mm/dd'
!! Date
2015/10/31
!! Changed by
JDM/WAW
! Reported by
WAW
!! Type of Change
Fix: inconsistency.

!! Description
There was inconsistent use of the following properties of semigroups:
IsGroupAsSemigroup, IsMonoidAsSemigroup, and IsSemilatticeAsSemigroup.
IsGroupAsSemigroup was true for semigroups that mathematically defined a group,
and for semigroups in the category IsGroup; IsMonoidAsSemigroup was only true
for semigroups that mathematically defined monoids, but did not belong to the
category IsMonoid; and IsSemilatticeAsSemigroup was simply a property of
semigroups, there is no category IsSemilattice.

From Version 4.8 onwards, IsSemilatticeAsSemigroup is renamed IsSemilattice,
and IsMonoidAsSemigroup returns true for semigroups in the category IsMonoid.
This way all of the properties of the type IsXAsSemigroup are consistent.

It should be noted that the only methods installed for IsMonoidAsSemigroup
belong to the Semigroups and Smallsemi packages. 

! Test Code
# these tests will only work if the Semigroups package is loaded
gap> LoadPackage("semigroups",false);
true
gap> S := Semigroup(Transformation([1, 2, 3, 4, 4]));
<commutative transformation semigroup of degree 5 with 1 generator>
gap> IsMonoid(S);
false
gap> IsMonoidAsSemigroup(S);
true
gap> S := Monoid(Transformation([1, 2, 3, 4, 4]));
<commutative transformation monoid of degree 5 with 1 generator>
gap> IsMonoid(S);
true
gap> IsMonoidAsSemigroup(S);
true
gap> S := Semigroup(IdentityTransformation);
<trivial transformation group of degree 0 with 1 generator>
gap> IsGroup(S);
true
gap> IsGroupAsSemigroup(S);
true
gap> S := Semigroup(Transformation([1, 2, 3, 4, 4]));
<commutative transformation semigroup of degree 5 with 1 generator>
gap> IsGroupAsSemigroup(S);
true
gap> IsGroup(S);
false

! Prefetch
In pull request #317

!! Changeset

!! End

